function fnHandMappingGUI()
%
% Copyright (c) 2008 Shay Ohayon, California Institute of Technology.
% This file is a part of a free software. you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation (see GPL.txt)

global g_strctParadigm g_strctPTB g_handles g_strctStimulusServer g_strctGUIParams g_strctRealTimeStatServer


% Note, always add controllers as fields to g_strctParadigm.m_strctControllers
% This way, they are automatically removed once we switch to another
% paradigm


   
[hParadigmPanel, iPanelHeight, iPanelWidth] = fnCreateParadigmPanel();
strctControllers.m_hPanel = hParadigmPanel;
strctControllers.m_iPanelHeight = iPanelHeight;
strctControllers.m_iPanelWidth = iPanelWidth;

iNumButtonsInRow = 3;
iButtonWidth = iPanelWidth / iNumButtonsInRow - 20;


[strctDesignControllers.m_hPanel, strctDesignControllers.m_iPanelHeight,strctDesignControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Design');


[strctStatisticsControllers.m_hPanel, strctStatisticsControllers.m_iPanelHeight,strctStatisticsControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Statistics Parameters');


[strctJuiceControllers.m_hPanel, strctJuiceControllers.m_iPanelHeight,strctJuiceControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Juice Parameters');

[strctStaticBarControllers.m_hPanel, strctStaticBarControllers.m_iPanelHeight,strctStaticBarControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Static Bar Parameters');
	
[strctMovingBarControllers.m_hPanel, strctMovingBarControllers.m_iPanelHeight,strctMovingBarControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Moving Bar Parameters');
	
[strctGaborControllers.m_hPanel, strctGaborControllers.m_iPanelHeight,strctGaborControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Gabor Parameters');

[strctDiscControllers.m_hPanel, strctDiscControllers.m_iPanelHeight,strctDiscControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Disc Parameters');
	

[strctColorControllers.m_hPanel, strctColorControllers.m_iPanelHeight,strctColorControllers.m_iPanelWidth] = ...
    fnCreateParadigmSubPanel(hParadigmPanel,50,iPanelHeight-5,'Color Parameters');
	
strctControllers.m_hSubPanels = [strctDesignControllers.m_hPanel;strctStatisticsControllers.m_hPanel;...
strctJuiceControllers.m_hPanel;strctColorControllers.m_hPanel;strctStaticBarControllers.m_hPanel;strctMovingBarControllers.m_hPanel;...
strctGaborControllers.m_hPanel;strctDiscControllers.m_hPanel];

 strctControllers.m_hSetSDesignPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Design',...
      'Position', [5 iPanelHeight-40 50 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''DesignPanel'');']);

 strctControllers.m_hSetStatisticsPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Stats',...
      'Position', [60 iPanelHeight-40 50 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''StatisticsPanel'');']);
    
 strctControllers.m_hSetJuicePanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Juice',...
      'Position', [110+5 iPanelHeight-40 50 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''JuicePanel'');']);

  strctControllers.m_hSetColorControlPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Color Function',...
      'Position', [165 iPanelHeight-40 55 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ColorPanel'');']);
	  
strctControllers.m_hSetStaticBarPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Bar Variables',...
      'Position', [220 iPanelHeight-40 55 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''StaticBarPanel'');']);
g_strctParadigm.m_iLastStimuliControllerButtonIndex = 1;
	  
strctControllers.m_hSetMovingBarPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Bar Variables',...
      'Position', [220 iPanelHeight-40 55 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''MovingBarPanel'');']);
set(strctControllers.m_hSetMovingBarPanel,'enable','off');	  
set(strctControllers.m_hSetMovingBarPanel,'visible','off');	

strctControllers.m_hSetGaborPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Gabor Variables',...
      'Position', [220 iPanelHeight-40 55 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''GaborPanel'');']);
set(strctControllers.m_hSetGaborPanel,'enable','off');
set(strctControllers.m_hSetGaborPanel,'visible','off');	
	  
strctControllers.m_hSetDiscPanel = uicontrol('Parent',hParadigmPanel, 'Style', 'pushbutton', 'String', 'Disc Variables',...
      'Position', [220 iPanelHeight-40 55 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''DiscPanel'');']);
set(strctControllers.m_hSetDiscPanel,'enable','off');
set(strctControllers.m_hSetDiscPanel,'visible','off');	
	  
strctControllers.m_ahStimuliControllerButtons = [strctControllers.m_hSetStaticBarPanel,strctControllers.m_hSetMovingBarPanel,...
		strctControllers.m_hSetGaborPanel,strctControllers.m_hSetDiscPanel];
	  
	  
  %% Juice Controllers
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctJuiceControllers.m_hPanel, 40+30*0, ...
    'Gaze Time(ms):', 'GazeTimeMS',30, 10000, [1, 50], fnTsGetVar('g_strctParadigm','GazeTimeMS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctJuiceControllers.m_hPanel, 40+30*1, ...
    'Gaze Time (Low):', 'GazeTimeLowMS', 30, 10000, [1, 50], fnTsGetVar('g_strctParadigm','GazeTimeLowMS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers, strctJuiceControllers.m_hPanel,40+30*2, ...
    'Gaze area (pix):', 'GazeBoxPix', 0, 300, [1, 50], fnTsGetVar('g_strctParadigm','GazeBoxPix'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctJuiceControllers.m_hPanel, 40+30*3, ...
    'Juice Time (ms):', 'JuiceTimeMS',25, 100, [1, 5], fnTsGetVar('g_strctParadigm','JuiceTimeMS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctJuiceControllers.m_hPanel, 40+30*4, ...
    'Juice Time (High):', 'JuiceTimeHighMS', 25, 100, [1, 5], fnTsGetVar('g_strctParadigm','JuiceTimeHighMS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctJuiceControllers.m_hPanel, 40+30*5, ...
    'Blink Time (ms):', 'BlinkTimeMS', 10, 500, [1, 50], fnTsGetVar('g_strctParadigm','BlinkTimeMS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers, strctJuiceControllers.m_hPanel,40+30*6, ...
    'Positive Increment (%):', 'PositiveIncrement', 0, 100, [1, 5], fnTsGetVar('g_strctParadigm','PositiveIncrement'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctJuiceControllers.m_hPanel, 40+30*7, ...
    'Fixation Size (pix):', 'FixationSizePix',0, 300, [1, 50], fnTsGetVar('g_strctParadigm','FixationSizePix'));
  
set(strctJuiceControllers.m_hPanel,'visible','off');
%% Stimulus Controllers
%{
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*0, ...
    'Fixation Size (pix):', 'FixationSizePix',0, 300, [1, 50], fnTsGetVar('g_strctParadigm','FixationSizePix'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*1, ...
    'Stimulus ON Time (ms):', 'StimulusON_MS',g_strctStimulusServer.m_fRefreshRateMS, ...
    500*g_strctStimulusServer.m_fRefreshRateMS, ...
    [g_strctStimulusServer.m_fRefreshRateMS, g_strctStimulusServer.m_fRefreshRateMS*5],...
    fnTsGetVar('g_strctParadigm','StimulusON_MS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*2, ...
    'Stimulus OFF Time (ms):', 'StimulusOFF_MS',g_strctStimulusServer.m_fRefreshRateMS, ...
    500*g_strctStimulusServer.m_fRefreshRateMS, [g_strctStimulusServer.m_fRefreshRateMS, g_strctStimulusServer.m_fRefreshRateMS*5], ...
    fnTsGetVar('g_strctParadigm' ,'StimulusOFF_MS'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*3, ...
    'Stimulus size (pix):', 'StimulusSizePix',0, 700,  [1, 50], fnTsGetVar('g_strctParadigm','StimulusSizePix'));
%}
	

%{
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*3, ...
    'Raster X:', 'rasterPlotX',0, 700,  [1, 50], fnTsGetVar('g_strctParadigm','rasterPlotX'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*4, ...
    'Raster Y:', 'rasterPlotY',0, 700,  [1, 50], fnTsGetVar('g_strctParadigm','rasterPlotY'));
	%}
iOffset = 400;
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStatisticsControllers.m_hPanel, 40+30*0, ...
    'Trials For Plotting', 'TrialsForPlotting', 0, 200, [1, 5], fnTsGetVar('g_strctParadigm','TrialsForPlotting'));
	
	%{
strctControllers.m_hRasterPlot= uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'checkbox', 'String', 'Raster Plot','value',  g_strctParadigm.m_bRasterPlot,...
     'Position', [5 iPanelHeight-iOffset-120 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ToggleRasterPlot'');']);	 

strctControllers.m_hHeatPlot= uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'checkbox', 'String', 'Heat Plot','value',  g_strctParadigm.m_bHeatPlot,...
     'Position', [5 iPanelHeight-iOffset-120 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ToggleHeatPlot'');']);	 	 
	
strctControllers.m_hPolarPlot= uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'checkbox', 'String', 'Polar Plot','value',  g_strctParadigm.m_bPolarPlot,...
     'Position', [5 iPanelHeight-iOffset-160 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''TogglePolarPlot'');']);
	 %}
%strctControllers.m_hSetDynamicTrialMode= uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'checkbox', 'String', 'Set Dynamic Trial Stats','value',  g_strctParadigm.m_bSetDynamicTrialMode,...
%     'Position', [5 iPanelHeight-iOffset-160 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''SetDynamicTrialMode'');']);

strctControllers.m_hSetNewBackground = uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'pushbutton', 'String', 'clear orientation buffer',...
     'Position', [2*iButtonWidth+40 iPanelHeight-250 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''flushorientationspikebuffer'');']);

strctControllers.m_hSetNewBackground = uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'pushbutton', 'String', 'clear color buffer',...
     'Position', [2*iButtonWidth+40 iPanelHeight-200 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''flushcolorspikebuffer'');']);

strctControllers.m_hTogglePSTHPlot= uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'pushbutton', 'String', 'toggle psth plot',...
     'Position', [2*iButtonWidth+40 iPanelHeight-300 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''togglepsthplot'');']);
	 

	 
 %strctControllers.m_hSetNewBackground = uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'pushbutton', 'String', 'Back Color',...
 %    'Position', [2*iButtonWidth+40 iPanelHeight-250 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''BackgroundColor'');']);

 %{
strctControllers.m_hFixationSpotChange = uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'pushbutton', 'String', 'Free Fix Pos',...
     'Position',  [iButtonWidth+20 iPanelHeight-250 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''FixationSpot'');']);

	
strctControllers.m_hStimulusPosChange = uicontrol('Parent',strctStatisticsControllers.m_hPanel,'Style', 'pushbutton', 'String', 'Free Stimulus Pos',...
     'Position', [5 iPanelHeight-250 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''StimulusPos'');']);
%}
 
 set(strctStatisticsControllers.m_hPanel,'visible','off');
%% Design options
 strctControllers.hImageListContextMenu = uicontextmenu;
 strctControllers.hColorListContextMenu = uicontextmenu;
uimenu(strctControllers.hImageListContextMenu, 'Label', 'Load List', 'Callback', [g_strctParadigm.m_strCallbacks,'(''LoadList'');']);


strctControllers.m_hFavroiteLists = uicontrol('Style', 'listbox', 'String', fnCellToCharShort(g_strctParadigm.m_acFavroiteLists),...
    'Position', [5 iPanelHeight-200 ,strctDesignControllers.m_iPanelWidth-10 120], 'parent',strctDesignControllers.m_hPanel, 'Callback',[g_strctParadigm.m_strCallbacks,'(''LoadFavoriteList'');'],...
    'value',max(1,g_strctParadigm.m_iInitialIndexInFavroiteList),'UIContextMenu',strctControllers.hImageListContextMenu);

strctControllers.m_hBlockText= uicontrol('Style', 'text', 'String', 'Stimuli Blocks:',...
    'Position', [5 iPanelHeight-225 ,130 15], 'parent',strctDesignControllers.m_hPanel,'HorizontalAlignment','left');


if ~isempty(g_strctParadigm.m_strctDesign)
    acBlockNames = {g_strctParadigm.m_strctDesign.m_strctBlocksAndOrder.m_astrctBlocks.m_strBlockName};
    acBlockNames = acBlockNames(g_strctParadigm.m_strctDesign.m_strctBlocksAndOrder.m_astrctBlockOrder(1).m_aiBlockIndexOrder);
else
    acBlockNames = {};
end

if ~isempty(g_strctParadigm.m_strctMasterColorTable)
	acColorNames = {g_strctParadigm.m_strctMasterColorTable};
else
	acColorNames = {}
end

if ~isempty(g_strctParadigm.m_strctDesign)
    acOrderNames = {g_strctParadigm.m_strctDesign.m_strctBlocksAndOrder.m_astrctBlockOrder.m_strOrderName};
else
    acOrderNames = {};
end

 strctControllers.m_hBlockOrderPopup = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'popupmenu', 'String', ...
     acOrderNames,'value', 1,...
     'Position', [90 iPanelHeight-265 160 60], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ChangeBlockOrder'');']);

 % Clear tuning functions, they are called separately
 %{
tempBlockNames = acBlockNames;
indices = find(~cellfun(@isempty,strfind(tempBlockNames,'Tuning')));
tempBlockNames(indices) = {[]};
acBlockNames = {tempBlockNames{find(~cellfun(@isempty,tempBlockNames))}};
%}

strctControllers.m_hBlockLists = uicontrol('Style', 'listbox', 'String', acBlockNames,...
    'Position', [5 iPanelHeight-330 ,strctDesignControllers.m_iPanelWidth-10 100], 'parent',strctDesignControllers.m_hPanel, 'Callback',[g_strctParadigm.m_strCallbacks,'(''JumpToBlock'');'],...
    'value',1);


%{
if g_strctParadigm.m_bRandFixPos
strctControllers.m_hRandomPosition = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'pushbutton', 'String', 'Rnd Fix Pos',...
     'Position', [5 iPanelHeight-365 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandFixationSpot'');'],'FontWeight','bold');
else
strctControllers.m_hRandomPosition = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'pushbutton', 'String', 'Rnd Fix Pos',...
     'Position', [5 iPanelHeight-365 iButtonWidth 30], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandFixationSpot'');'],'FontWeight','normal');
end;
 
strctControllers.m_hRandomPositionMinEdit = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'edit', 'String', num2str(g_strctParadigm.m_fRandFixPosMin),...
     'Position', [iButtonWidth+15 iPanelHeight-365 25 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandFixationSpotMinEdit'');']);

strctControllers.m_hRandomPositionMaxEdit = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'edit', 'String', num2str(g_strctParadigm.m_fRandFixPosMax),...
     'Position', [iButtonWidth+50 iPanelHeight-365 25 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandFixationSpotMaxEdit'');']);

strctControllers.m_hRandomPositionRadiusEdit = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'edit', 'String', num2str(g_strctParadigm.m_fRandFixRadius),...
     'Position', [iButtonWidth+90 iPanelHeight-365 25 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandFixationSpotRadiusEdit'');']);




strctControllers.m_hRandomPositionRadiusEditCheck = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Sync To Stimulus','value',g_strctParadigm.m_bRandFixSyncStimulus,...
     'Position', [5 iPanelHeight-iOffset 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandFixationSync'');']);

strctControllers.m_hHideWhenNotLooking = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Do not display images when monkey is not looking','value', g_strctParadigm.m_bHideStimulusWhenNotLooking,...
     'Position', [5 iPanelHeight-iOffset-20 280 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''HideNotLookingToggle'');']);
 


strctControllers.m_hRandomImageIndex = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Randomize Order','value', g_strctParadigm.m_bRandom,...
     'Position', [5 iPanelHeight-iOffset-60 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''Random'');']);

strctControllers.m_hParameterSweep = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Parameter Sweep','value', g_strctParadigm.m_bParameterSweep,...
     'Position', [5 iPanelHeight-iOffset-80 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ParameterSweep'');']);
 %}
 
 strctControllers.m_hSetStimulusClipping = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Stimulus Clipping','value', g_strctParadigm.m_bClipStimulusOutsideStimArea,...
     'Position', [5 iPanelHeight-iOffset-40 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''SetStimulusClipping'');']);
 %{
 strctControllers.m_hPhotoDiodeRect = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Photodiode Rect','value', g_strctParadigm.m_bShowPhotodiodeRect,...
     'Position', [5 iPanelHeight-iOffset-40 240 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''PhotoDiodeRectToggle'');']);
 %}
  iOffset = 400;
 if ~isempty(g_strctParadigm.m_acNoisePatternsFiles)
     strctControllers.m_hNoiseOverlay = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Noise Overlay','value', ...
         fnTsGetVar('g_strctParadigm','NoiseOverlayActive'),...
         'Position', [5 iPanelHeight-iOffset-100 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''NoiseOverlayToggle'');']);
     strctControllers.m_hNoisePatternPopup = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'popupmenu', 'String', ...
         g_strctParadigm.m_acNoisePatternsFiles,'value', 1,...
         'Position', [130 iPanelHeight-iOffset-140 160 60], 'Callback', [g_strctParadigm.m_strCallbacks,'(''NoisePatternSwitch'');']);
end
 

strctControllers.m_hParameterSweepPopup = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'popupmenu', 'String', ...
    {g_strctParadigm.m_astrctParameterSweepModes.m_strName},'value', 1,...
     'Position', [130 iPanelHeight-iOffset-115 160 60], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ParameterSweepMode'');']);
 
strctControllers.m_hDisplayStimuliLocally = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Play Stimuli Locally','value', g_strctParadigm.m_bDisplayStimuliLocally,...
     'Position', [5 iPanelHeight-iOffset-120 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''PlayStimuliLocally'');']);
 
strctControllers.m_hShowWhileLoading = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Show While Loading','value',  g_strctParadigm.m_bShowWhileLoading,...
     'Position', [5 iPanelHeight-iOffset-140 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ShowWhileLoading'');']);
 
 
strctControllers.m_hRepeatNonFixated= uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Repeat Non Fixated','value',  g_strctParadigm.m_bRepeatNonFixatedImages,...
     'Position', [5 iPanelHeight-iOffset-160 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RepatNonFixatedToggle'');']);

 bForceStereo = fnTsGetVar('g_strctParadigm','ForceStereoOnMonocularLists') > 0;
 strctControllers.m_hForceStereoOnMonocularLists= uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Force Stereo in Monocular Designs','value',  bForceStereo,...
     'Position', [5 iPanelHeight-iOffset-180 220 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ForceStereoToggle'');']);

 acLocalStereoMode = {'Left Eye Only','Right Eye Only','Left & Side by Side (Small)','Side by Side (Large)','Left: Red, Right: Blue','Left: Blue, Right: Red'};
 if isfield(g_strctParadigm,'m_strLocalStereoMode')
    iIndex=find(ismember(acLocalStereoMode,g_strctParadigm.m_strLocalStereoMode));
    if ~isempty(iIndex)
        iInitialMode = iIndex;
    else
     iInitialMode = 1;
    end
 else
     iInitialMode = 1;
 end
  strctControllers.m_hLocalStereoModeText = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'text', 'String', ...
     'Local Stereo Mode','Position', [5 iPanelHeight-iOffset-205 130 20],'HorizontalAlignment','left');

 
 strctControllers.m_hLocalStereoModePopup = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'popupmenu', 'String', ...
     acLocalStereoMode,'value', iInitialMode,...
     'Position', [130 iPanelHeight-iOffset-240 160 60], 'Callback', [g_strctParadigm.m_strCallbacks,'(''LocalStereoMode'');']);

  strctControllers.m_hBlocksDoneText = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'text', 'String', ...
     'After blocks action:','Position', [5 iPanelHeight-iOffset-235 100 20],'HorizontalAlignment','left');
 
acBlocksDoneAction = {'Reset And Stop',  'Set Next Order But Do not Start',   'Repeat Same Order',    'Set Next Order and Start'};

iIndex = fnFindString(acBlocksDoneAction, g_strctParadigm.m_strBlockDoneAction);
if iIndex == -1
    g_strctParadigm.m_strBlockDoneAction = acBlocksDoneAction{1};
    iIndex = 1;
end
 
 strctControllers.m_hBlocksDoneActionPopup = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'popupmenu', 'String', ...
     acBlocksDoneAction,'value', iIndex,...
     'Position', [130 iPanelHeight-iOffset-270 160 60], 'Callback', [g_strctParadigm.m_strCallbacks,'(''BlocksDoneAction'');']);


strctControllers.m_hLoopCurrentBlock = uicontrol('Parent',strctDesignControllers.m_hPanel,'Style', 'checkbox', 'String', 'Loop Current Block','value',  g_strctParadigm.m_bBlockLooping,...
     'Position', [5 iPanelHeight-iOffset-255 180 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''BlockLoopingToggle'');']);
 
 
%% Static Bar Variables
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*0, ...
    'Bar Width', 'StaticBarWidth', ...
    1, 200, [1, 10], fnTsGetVar('g_strctParadigm','StaticBarWidth'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*1, ...
    'Bar Length', 'StaticBarLength', ...
    1, 200, [1, 10], fnTsGetVar('g_strctParadigm' ,'StaticBarLength'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*2, ...
    'Orientation', 'StaticBarOrientation', ...
    0, 359, [1, 2], fnTsGetVar('g_strctParadigm' ,'StaticBarOrientation'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*3, ...
    'Range', 'StaticBarMoveDistance', ...
    0, 1000, [1, 100], fnTsGetVar('g_strctParadigm' ,'StaticBarMoveDistance'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*4, ...
    'Movement Speed', 'StaticBarMoveSpeed', ...
    0, 400, [1, 100], fnTsGetVar('g_strctParadigm' ,'StaticBarMoveSpeed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*5, ...
    'Blur Steps', 'StaticBarBlurSteps', ...
    0, 100, [1, 2], fnTsGetVar('g_strctParadigm' ,'StaticBarBlurSteps'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*6, ...
    'Bar Red', 'StaticBarStimulusRed', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'StaticBarStimulusRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*7, ...
    'Bar Green', 'StaticBarStimulusGreen', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'StaticBarStimulusGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*8, ...
    'Bar Blue', 'StaticBarStimulusBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'StaticBarStimulusBlue'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*9, ...
    'Background Red', 'StaticBarBackgroundRed', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'StaticBarBackgroundRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*10, ...
    'Background Green', 'StaticBarBackgroundGreen', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'StaticBarBackgroundGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*11, ...
    'Background Blue', 'StaticBarBackgroundBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'StaticBarBackgroundBlue'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctStaticBarControllers.m_hPanel, 40+30*12, ...
    'Stimulus Color', 'StaticBarStimulusPresetColor', ...
    1, 8, [1, 1], fnTsGetVar('g_strctParadigm' ,'StaticBarStimulusPresetColor'));
	
	
strctControllers.m_hUpdateStimulusPosition = uicontrol('Parent', strctStaticBarControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Update Stimulus Location',...
      'Position', [5 iPanelHeight-iOffset-80 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UpdateStimulusPosition'');']);	
	  
	 	
strctControllers.m_hUseCalibratedColors = uicontrol('Parent',strctStaticBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Preset Colors','value',...
	g_strctParadigm.m_bUsePlainBarPresetColors,...
    'Position', [5 iPanelHeight-iOffset-100 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UsePlainBarPresetColors'');']); 
	

strctControllers.m_hFlipForegroundBackground = uicontrol('Parent',strctStaticBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'flip background','value',...
	g_strctParadigm.m_bFlipForegroundBackground,...
    'Position', [5 iPanelHeight-iOffset-140 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''FlipForegroundBackground'');']);




	
%{



strctControllers.m_hUseCalibratedColors = uicontrol('Parent',strctStaticBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Calibrated Colors','value',...
	g_strctParadigm.m_bUseCalibratedColors,...
    'Position', [5 iPanelHeight-iOffset-180 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseCalibratedColors'');']);


	strctControllers.m_hCycleColors = uicontrol('Parent',strctStaticBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Cycle Colors','value',...
	g_strctParadigm.m_bRealTimeCycleColors,...
    'Position', [5 iPanelHeight-iOffset-220 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RealTimeCycleColors'');']);
%}


set(strctStaticBarControllers.m_hPanel,'visible','off');

	
%% Moving Bar Variables

	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*0, ...
    'Bar Width', 'MovingBarWidth', ...
    1, 200, [1, 10], fnTsGetVar('g_strctParadigm','MovingBarWidth'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*1, ...
    'Bar Length', 'MovingBarLength', ...
    1, 200, [1, 10], fnTsGetVar('g_strctParadigm' ,'MovingBarLength'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*2, ...
    'Orientation', 'MovingBarOrientation', ...
    0, 359, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarOrientation'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*3, ...
    'Blur Steps', 'MovingBarBlurSteps', ...
    0, 100, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarBlurSteps'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*4, ...
    'Range', 'MovingBarMoveDistance', ...
    0, 1000, [1, 25], fnTsGetVar('g_strctParadigm' ,'MovingBarMoveDistance'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*5, ...
    'Number of Bars', 'MovingBarNumberOfBars', ...
    1, 15, [1, 1], fnTsGetVar('g_strctParadigm' ,'MovingBarNumberOfBars'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*6, ...
    'Stimulus Area', 'MovingBarStimulusArea', ...
    0, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusArea'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*7, ...
    'Stimulus On Time', 'MovingBarStimulusOnTime', ...
    10, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusOnTime'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*8, ...
    'Stimulus Off Time', 'MovingBarStimulusOffTime', ...
    10, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusOffTime'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*9, ...
    'Bar Red', 'MovingBarStimulusRed', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*10, ...
    'Bar Green', 'MovingBarStimulusGreen', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*11, ...
    'Bar Blue', 'MovingBarStimulusBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusBlue'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*12, ...
    'Background Red', 'MovingBarBackgroundRed', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'MovingBarBackgroundRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*13, ...
    'Background Green', 'MovingBarBackgroundGreen', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'MovingBarBackgroundGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*14, ...
    'Background Blue', 'MovingBarBackgroundBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'MovingBarBackgroundBlue'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctMovingBarControllers.m_hPanel, 40+30*15, ...
    'Stimulus Color', 'MovingBarStimulusPresetColor', ...
    1, 8, [1, 1], fnTsGetVar('g_strctParadigm' ,'MovingBarStimulusPresetColor'));

	
strctControllers.m_hUpdateStimulusPosition = uicontrol('Parent', strctMovingBarControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Update Stimulus Location',...
      'Position', [5 iPanelHeight-iOffset-180 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UpdateStimulusPosition'');']);	
	  
strctControllers.m_hSetRandomStimulusPosition = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Randomize Position','value',...
	g_strctParadigm.m_bRandomStimulusPosition,...
    'Position', [5 iPanelHeight-iOffset-200 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandStimulusLocation'');']);
	
strctControllers.m_hSetRandomStimulusOrientation = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Randomize Orientation','value',...
	g_strctParadigm.m_bRandomStimulusOrientation,...
    'Position', [5 iPanelHeight-iOffset-220 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandStimulusOrientation'');']);	


strctControllers.m_hSetCycleStimulusOrientation = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Cycle Orientation','value',...
	g_strctParadigm.m_bCycleStimulusOrientation,...
    'Position', [5 iPanelHeight-iOffset-240 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''CycleStimulusOrientation'');']);	
	
strctControllers.m_hSetReverseCycleStimulusOrientation = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Reverse Orientation','value',...
	g_strctParadigm.m_bReverseCycleStimulusOrientation,...
    'Position', [5 iPanelHeight-iOffset-260 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ReverseCycleStimulusOrientation'');']);	
	%{
strctControllers.m_hUseCalibratedColors = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Calibrated Colors','value',...
	g_strctParadigm.m_bUseCalibratedColors,...
    'Position', [5 iPanelHeight-iOffset-300 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseCalibratedColors'');']);
	%}
strctControllers.m_hUseCalibratedColors = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Preset Colors','value',...
	g_strctParadigm.m_bUseMovingBarPresetColors,...
    'Position', [5 iPanelHeight-iOffset-340 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseMovingBarPresetColors'');']);

strctControllers.m_hFlipForegroundBackgroundMovingBar = uicontrol('Parent',strctMovingBarControllers.m_hPanel,'Style', 'checkbox', 'String', 'Flip fore-back colors','value',...
	g_strctParadigm.m_bFlipForegroundBackgroundMovingBar,...
    'Position', [5 iPanelHeight-iOffset-360 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''FlipForegroundBackgroundMovingBar'');']);	

set(strctMovingBarControllers.m_hPanel,'visible','off');
	
	
	
	
%% Gabor Variables

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*0, ...
    'Gabor Width', 'GaborBarWidth', ...
    1, 1000, [1, 10], fnTsGetVar('g_strctParadigm','GaborBarWidth'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*1, ...
    'Gabor Length', 'GaborBarLength', ...
    1, 1000, [1, 10], fnTsGetVar('g_strctParadigm' ,'GaborBarLength'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*2, ...
    'Orientation', 'GaborOrientation', ...
    0, 359, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborOrientation'));



strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*3, ...
    'Gabor Phase', 'GaborPhase', ...
    0, 360, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborPhase'));
	

	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*4, ...
    'Gabor Frequency', 'GaborFreq', ...
    0, 100, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborFreq'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*5, ...
    'Gabor Contrast', 'GaborContrast', ...
    0, 200, [1, 2], fnTsGetVar('g_strctParadigm','GaborContrast'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*6, ...
    'Gabor Sigma', 'GaborSigma', ...
    0, 200, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborSigma'));

	
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*7, ...
    'Gabor Size', 'GaborStimulusArea', ...
    0, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborStimulusArea'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*8, ...
    'Movement Speed', 'GaborMoveDistance', ...
    0, 1000, [1, 25], fnTsGetVar('g_strctParadigm' ,'GaborMoveDistance'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*9, ...
    'Stimulus Red', 'GaborStimulusRed', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborStimulusRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*10, ...
    'Stimulus Green', 'GaborStimulusGreen', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'GaborStimulusGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*11, ...
    'Stimulus Blue', 'GaborStimulusBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'GaborStimulusBlue'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*12, ...
    'Background Red', 'GaborBackgroundRed', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'GaborBackgroundRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*13, ...
    'Background Green', 'GaborBackgroundGreen', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'GaborBackgroundGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*14, ...
    'Background Blue', 'GaborBackgroundBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'GaborBackgroundBlue'));


	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctGaborControllers.m_hPanel, 40+30*15, ...
    'Stimulus Color', 'GaborStimulusPresetColor', ...
    1, 8, [1, 1], fnTsGetVar('g_strctParadigm' ,'GaborStimulusPresetColor'));
	

strctControllers.m_hSetReversePhaseDirection = uicontrol('Parent',strctGaborControllers.m_hPanel,'Style', 'checkbox', 'String', 'Reverse','value',...
	g_strctParadigm.m_strctGaborParams.m_bReversePhaseDirection,...
    'Position', [5 iPanelHeight-iOffset-260 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ReversePhaseDirection'');']);
	
strctControllers.m_hUpdateStimulusPosition = uicontrol('Parent', strctGaborControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Update Stimulus Location',...
      'Position', [5 iPanelHeight-iOffset-220 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UpdateStimulusPosition'');']);
	
strctControllers.m_hUsePresetColors = uicontrol('Parent',strctGaborControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Preset Colors','value',...
	g_strctParadigm.m_bUseGaborPresetColors,...
    'Position', [5 iPanelHeight-iOffset-240 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseGaborPresetColors'');']);
	
set(strctGaborControllers.m_hPanel,'visible','off');	
	
%% Disc Variables

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*0, ...
    'DiscDiameter', 'DiscDiameter', ...
    1, 1000, [1, 10], fnTsGetVar('g_strctParadigm','DiscDiameter'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*1, ...
    'Number of Discs', 'DiscNumberOfDiscs', ...
    1, 20, [1, 10], fnTsGetVar('g_strctParadigm','DiscNumberOfDiscs'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*2, ...
    'Orientation', 'DiscOrientation', ...
    0, 359, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscOrientation'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*3, ...
    'Range', 'DiscMoveDistance', ...
    0, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscMoveDistance'));	
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*4, ...
    'Movement Speed', 'DiscMoveSpeed', ...
    0, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscMoveSpeed'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*5, ...
    'Stimulus Area', 'DiscStimulusArea', ...
    0, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscStimulusArea'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*6, ...
    'Off Time', 'DiscStimulusOffTime', ...
    10, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscStimulusOffTime'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*7, ...
    'On Time', 'DiscStimulusOnTime', ...
    10, 4096, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscStimulusOnTime'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*8, ...
    'Disc Red', 'DiscStimulusRed', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscStimulusRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*9, ...
    'Disc Green', 'DiscStimulusGreen', ...
    0, 255, [1, 2], fnTsGetVar('g_strctParadigm' ,'DiscStimulusGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*10, ...
    'Disc Blue', 'DiscStimulusBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'DiscStimulusBlue'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*11, ...
    'Background Red', 'DiscBackgroundRed', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'DiscBackgroundRed'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*12, ...
    'Background Green', 'DiscBackgroundGreen', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'DiscBackgroundGreen'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*13, ...
    'Background Blue', 'DiscBackgroundBlue', ...
    0, 255, [1, 5], fnTsGetVar('g_strctParadigm' ,'DiscBackgroundBlue'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctDiscControllers.m_hPanel, 40+30*14, ...
    'Stimulus Color', 'DiscStimulusPresetColor', ...
    1, 8, [1, 1], fnTsGetVar('g_strctParadigm' ,'DiscStimulusPresetColor'));

strctControllers.m_hUpdateStimulusPosition = uicontrol('Parent', strctDiscControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Update Stimulus Location',...
      'Position', [5 iPanelHeight-iOffset-200 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UpdateStimulusPosition'');']);	
	  
strctControllers.m_hSetRandomStimulusPosition = uicontrol('Parent',strctDiscControllers.m_hPanel,'Style', 'checkbox', 'String', 'Randomize Position','value',...
	g_strctParadigm.m_bRandomDiscStimulusPosition,...
    'Position', [5 iPanelHeight-iOffset-220 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandDiscStimulusLocation'');']);
	
	strctControllers.m_hSetDiscRandomStimulusOrientation = uicontrol('Parent',strctDiscControllers.m_hPanel,'Style', 'checkbox', 'String', 'Randomize Orientation','value',...
		g_strctParadigm.m_strctHandMappingParameters.m_bDiscRandomStimulusOrientation,...
		'Position', [5 iPanelHeight-iOffset-240 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''DiscRandStimulusOrientation'');']);	

strctControllers.m_hCycleColors = uicontrol('Parent',strctDiscControllers.m_hPanel,'Style', 'checkbox', 'String', 'Cycle Colors','value',...
	g_strctParadigm.m_bUseCalibratedColors,...
    'Position', [5 iPanelHeight-iOffset-260 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''CycleColors'');']);	
	
strctControllers.m_hUsePresetColors = uicontrol('Parent',strctDiscControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Preset Colors','value',...
	g_strctParadigm.m_bUseDiscPresetColors,...
    'Position', [5 iPanelHeight-iOffset-280 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseDiscPresetColors'');']);

	
set(strctDiscControllers.m_hPanel,'visible','off');
	

	






	

	
	
	
	

	
% Tuning Function

[a2cCharMatrix, g_strctParadigm.m_strctMasterColorTableLookup] = fnStructToCharShort(g_strctParadigm.m_strctMasterColorTable);
strctControllers.m_hColorLists = uicontrol('Style', 'listbox', 'String', a2cCharMatrix,...
    'Position', [5 iPanelHeight-200 ,strctColorControllers.m_iPanelWidth-10 120], 'parent',strctColorControllers.m_hPanel, 'Callback',[g_strctParadigm.m_strCallbacks,'(''LoadColorList'');'],...
    'value',max(1,g_strctParadigm.m_iInitialIndexInColorList),'UIContextMenu',strctControllers.hColorListContextMenu, 'max',numel(g_strctParadigm.m_strctMasterColorTableLookup),...
    'min',1);

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*6, ...
    'DKL Elevation', 'DKLElevation', ...
    0, 200, [1, 1], fnTsGetVar('g_strctParadigm' ,'DKLElevation'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*7, ...
    'DKL Radius', 'DKLRadius', ...
    0, 100, [1, 1], fnTsGetVar('g_strctParadigm' ,'DKLRadius'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*8, ...
    'DKL Azimuth steps', 'DKLAzimuthSteps', ...
    1, 320, [1, 1], fnTsGetVar('g_strctParadigm' ,'DKLAzimuthSteps'));

strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*9, ...
    'Color Cycle Hz', 'ColorCycleRate', ...
    0, 80, [1, 1], fnTsGetVar('g_strctParadigm' ,'ColorCycleRate'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*10, ...
    'LM axis', 'CartesianXCoord', ...
    0, 2000, [1, 10], fnTsGetVar('g_strctParadigm' ,'CartesianXCoord'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*11, ...
    'S axis', 'CartesianYCoord', ...
    0, 2000, [1, 10], fnTsGetVar('g_strctParadigm' ,'CartesianYCoord'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*12, ...
    'LMS axis', 'CartesianZCoord', ...
    0, 2000, [1, 10], fnTsGetVar('g_strctParadigm' ,'CartesianZCoord'));
	
strctControllers = fnAddTextSliderEditComboSmallWithCallback2(strctControllers,strctColorControllers.m_hPanel, 40+30*13, ...
    'Phase Shift Offset', 'ShiftOffsetDegrees', ...
    0, 360, [1, 10], fnTsGetVar('g_strctParadigm' ,'ShiftOffsetDegrees'));
	
	
strctControllers.m_hSetCycleColors = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Cycle Colors','value',...
	g_strctParadigm.m_bCycleColors,...
    'Position', [5 iPanelHeight-iOffset-280 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''CycleColors'');']);	

strctControllers.m_hSetRandomColor = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Random Color','value',...
	g_strctParadigm.m_bRandomColor,...
    'Position', [5 iPanelHeight-iOffset-300 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandomColorOrder'');']);	
	
strctControllers.m_hSetReverseColorOrder = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Reverse Color Order','value',...
	g_strctParadigm.m_bReverseColorOrder,...
    'Position', [5 iPanelHeight-iOffset-320 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ReverseColorOrder'');']);
	
strctControllers.m_hTogglePhaseShiftOffset = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Shift Offset','value',...
	g_strctParadigm.m_bPhaseShiftOffset,...
    'Position', [5 iPanelHeight-iOffset-260 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''PhaseShiftOffset'');']);
	
strctControllers.m_hUseCartesianCoordinates = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use DKL Colors','value',...
	g_strctParadigm.m_bUseCartesianCoordinates,...
    'Position', [5 iPanelHeight-iOffset-240 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseCartesianCoordinates'');']);
	
strctControllers.m_hUseSinePulses = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Use Sine Pulses','value',...
	g_strctParadigm.m_bUseGaussianPulses,...
    'Position', [5 iPanelHeight-iOffset-220 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''UseSinePulses'');']);
	
	
	
%strctControllers.m_hColorText= uicontrol('Style', 'text', 'String', 'Color Saturations:',...
 %   'Position', [5 iPanelHeight-225 ,130 15], 'parent',strctColorControllers.m_hPanel,'HorizontalAlignment','left');


%{
strctControllers.m_hResetTuningPlot = uicontrol('Parent', strctColorControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Reset Tuning Polar',...
    'Position', [5 iPanelHeight-iOffset-20 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ResetTuningPlot'');']);
	
strctControllers.m_hSetOrientationFunction = uicontrol('Parent', strctColorControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Perform Orientation Test',...
    'Position', [5 iPanelHeight-iOffset-80 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''PerformOrientationTuning'');']);
	
strctControllers.m_hSetTuningFunction = uicontrol('Parent', strctColorControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Perform Color Test',...
      'Position', [5 iPanelHeight-iOffset-100 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''PerformTuningFunction'');']);	

strctControllers.m_hSetTuningFunction = uicontrol('Parent', strctColorControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Perform Position Test',...
      'Position', [5 iPanelHeight-iOffset-120 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''PerformPositionTuningFunction'');']);
	%}
%{	
strctControllers.m_hGenerateAFCTask = uicontrol('Parent', strctColorControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Generate AFC Experiment',...
      'Position', [5 iPanelHeight-iOffset-120 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''GenerateAFCTask'');']);	
	%}  
	%{
strctControllers.m_hSetRandomColorOrder = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Randomize Color Order','value',...
	g_strctParadigm.m_bRandomColorOrder,...
    'Position', [5 iPanelHeight-iOffset-140 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandomColorOrder'');']);
	
strctControllers.m_hSetReverseColorOrder = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Reverse Color Order','value',...
	g_strctParadigm.m_bReverseColorOrder,...
    'Position', [5 iPanelHeight-iOffset-160 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ReverseColorOrder'');']);

strctControllers.m_hSetRandomOrientationOrder = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Random Orientation Order','value',...
	g_strctParadigm.m_bRandomOrientation,...
    'Position', [5 iPanelHeight-iOffset-180 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''RandomOrientationOrder'');']);

strctControllers.m_hSetReverseOrientationOrder = uicontrol('Parent',strctColorControllers.m_hPanel,'Style', 'checkbox', 'String', 'Reverse Orientation Order','value',...
	g_strctParadigm.m_bReverseOrientationOrder,...
    'Position', [5 iPanelHeight-iOffset-200 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ReverseOrientationOrder'');']);

strctControllers.m_hSetTuningFunction = uicontrol('Parent', strctColorControllers.m_hPanel, 'Style', 'pushbutton', 'String', 'Reset',...
      'Position', [5 iPanelHeight-iOffset-240 120 20], 'Callback', [g_strctParadigm.m_strCallbacks,'(''ResetHandMapper'');']);
	  %}

set(strctColorControllers.m_hPanel,'visible','off');
	


g_strctParadigm.m_strctControllers = strctControllers;

return;
